1) create a file in ~/.gradle/gradle.properties with something like:

com.rsk.apiKey=<your covalenthq api key>
com.rsk.wallet=<your rsk wallet address>

The api key should look like: ckey_XXXXXXXXXXXXXXX, get it by registering yourself in https://www.covalenthq.com
the second one your wallet address starting with 0x

2) go in the cmd line to this directory and run ./gradlew :run

    note: if you are developing locally I suggest you run instead: ./gradlew run --args="<wallet_addr> --classpath" so that you are not
          querying covalenthq API every time. Instead, the files from src/main/resources/transactions/<wallet_addr>-<page_number>.json
          will be used, where <wallet_addr> is your RSk wallet address, and <page-number> is an incremental integer.
          You can go in your browser to:
            https://api.covalenthq.com/v1/30/address/<your_wallet_addr>>/transactions_v2/?key=ckey_docs&page-number=0
          and store the output in such files. Increment the last argument number, until in the response you get
          data.pagination.has-more == false

status: it is detecting spot conversions, add and remove liquidity, and vesting withdrawal. But deposits are nott
visible via covalenthq api... I was able to implement a quick solution, run it with --classpath as described above,
but export your internal transactions from rsk explorer to classpath:/resources/transactions/<wallet_addr>-internal.json
then the program will be able to detect deposits from there.
When you run it, it will generate a file in <project>/ctc_report.csv which you can import in cryptotaxcalculator.io



